
{
  "id": null,
  "uid": "microsvc-ops",
  "title": "Microservices Operations",
  "tags": ["microservices","prometheus","express"],
  "timezone": "browser",
  "schemaVersion": 27,
  "version": 1,
  "refresh": "15s",
  "templating": {
    "list": [
      {
        "name": "service",
        "type": "query",
        "label": "Service",
        "datasource": "Prometheus",
        "query": "label_values(http_requests_total, service)",
        "multi": true,
        "includeAll": true,
        "allValues": [".*"]
      },
      {
        "name": "env",
        "type": "query",
        "label": "Environment",
        "datasource": "Prometheus",
        "query": "label_values(http_requests_total, env)",
        "multi": false,
        "includeAll": false
      }
    ]
  },
  "panels": [
    {
      "id": 1,
      "gridPos": { "x": 0, "y": 0, "w": 12, "h": 8 },
      "title": "Requests per Second",
      "type": "timeseries",
      "datasource": "Prometheus",
      "targets": [
        {
          "expr": "sum( rate(http_requests_total{service=~\"$service\",env=~\"$env\"}[1m]) ) by (method,route,statusCode)",
          "legendFormat": "{{method}} {{route}} {{statusCode}}",
          "refId": "A"
        }
      ],
      "fieldConfig": { "defaults": { "unit": "reqps" } }
    },
    {
      "id": 2,
      "gridPos": { "x": 12, "y": 0, "w": 12, "h": 8 },
      "title": "95th‑pct Latency (sec)",
      "type": "timeseries",
      "datasource": "Prometheus",
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket{service=~\"$service\",env=~\"$env\"}[5m])) by (le,method,route))",
          "legendFormat": "{{method}} {{route}}",
          "refId": "A"
        }
      ],
      "fieldConfig": { "defaults": { "unit": "s" } }
    },
    {
      "id": 3,
      "gridPos": { "x": 0, "y": 8, "w": 12, "h": 6 },
      "title": "In‑Flight Requests",
      "type": "timeseries",
      "datasource": "Prometheus",
      "targets": [
        {
          "expr": "sum(http_inflight_requests{service=~\"$service\",env=~\"$env\"}) by (method,route)",
          "legendFormat": "{{method}} {{route}}",
          "refId": "A"
        }
      ],
      "fieldConfig": { "defaults": { "unit": "count" } }
    },
    {
      "id": 4,
      "gridPos": { "x": 12, "y": 8, "w": 12, "h": 6 },
      "title": "Error Rate (5xx/sec)",
      "type": "timeseries",
      "datasource": "Prometheus",
      "targets": [
        {
          "expr": "sum( rate(http_requests_errors_total{service=~\"$service\",env=~\"$env\"}[1m]) ) by (method,route,statusCode)",
          "legendFormat": "{{method}} {{route}} {{statusCode}}",
          "refId": "A"
        }
      ],
      "fieldConfig": { "defaults": { "unit": "errps" } }
    },
    {
      "id": 5,
      "gridPos": { "x": 0, "y": 14, "w": 24, "h": 4 },
      "title": "Service Health Overview",
      "type": "stat",
      "datasource": "Prometheus",
      "targets": [
        {
          "expr": "up{job=~\"$service\", env=~\"$env\"}",
          "refId": "A"
        }
      ],
      "options": {
        "reduceOptions": { "calcs": ["lastNotNull"], "values": false }
      }
    }
  ]
}