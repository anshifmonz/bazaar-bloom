services:
  backend:
    build:
      context: ./server
    image: e-commerce-server
    container_name: e-commerce-server
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    environment:
      - NODE_ENV=${NODE_ENV}
      - DB_URL=${DB_URL}
      - SESSION_SECRET=${SESSION_SECRET}
      - PORT=${SERVER_PORT}
    depends_on:
      - postgresDb
    volumes:
      - ./server:/app
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${SERVER_PORT}/health"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  postgresDb:
    image: postgres
    container_name: e-commerce-postgres
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ecommerce_db_data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  user-service:
    build:
      context: ./auth
    image: user-service
    container_name: user-service
    expose:
      - "${USER_SERVICE_PORT}"
    environment:
      - NODE_ENV=${NODE_ENV}
      - DB_URL=${USER_SERVICE_DB}
      - SESSION_SECRET=${SESSION_SECRET}
      - PORT=${USER_SERVICE_PORT}
    depends_on:
      - userDb
    volumes:
      - ./auth:/app
    networks:
      - backend

  userDb:
    image: postgres
    container_name: userDb
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=${USER_DB_USER}
      - POSTGRES_PASSWORD=${USER_DB_PASSWORD}
      - POSTGRES_DB=${USER_DB_NAME}
    depends_on:
      - backend
    volumes:
      - user_service:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${USER_DB_USER} -d ${USER_DB_NAME}"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  cart-service:
    build:
      context: ./cart
    image: cart-service
    container_name: cart-service
    expose:
      - "${CART_SERVICE_PORT}"
    environment:
      - NODE_ENV=${NODE_ENV}
      - DB_URL=${CART_SERVICE_DB}
      - PORT=${CART_SERVICE_PORT}
    depends_on:
      - cartDb
    volumes:
      - ./cart:/app
    networks:
      - backend

  cartDb:
    image: postgres
    container_name: cartDb
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=${CART_DB_USER}
      - POSTGRES_PASSWORD=${CART_DB_PASSWORD}
      - POSTGRES_DB=${CART_DB_NAME}
    depends_on:
      - backend
    volumes:
      - cart_service:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${CART_DB_USER} -d ${CART_DB_NAME}"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  product-service:
    build:
      context: ./product
    image: product-service
    container_name: product-service
    expose:
      - "${PRODUCT_SERVICE_PORT}"
    environment:
      - NODE_ENV=${NODE_ENV}
      - DB_URL=${PRODUCT_SERVICE_DB}
      - PORT=${PRODUCT_SERVICE_PORT}
    depends_on:
      - productDb
    volumes:
      - ./product:/app
    networks:
      - backend

  productDb:
    image: postgres
    container_name: productDb
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=${PRODUCT_DB_USER}
      - POSTGRES_PASSWORD=${PRODUCT_DB_PASSWORD}
      - POSTGRES_DB=${PRODUCT_DB_NAME}
    depends_on:
      - backend
    volumes:
      - product_service:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PRODUCT_DB_USER} -d ${PRODUCT_DB_NAME}"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

networks:
  backend:
    driver: bridge

volumes:
  ecommerce_db_data:
    driver: local
  user_service:
    driver: local
  cart_service:
    driver: local
  product_service:
    driver: local
